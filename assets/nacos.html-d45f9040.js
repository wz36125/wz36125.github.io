import{_ as e,r as t,o as p,c,b as a,d as i,e as o,a as n}from"./app-c9408cad.js";const l={},d=n('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><h3 id="注册中心与配置中心" tabindex="-1"><a class="header-anchor" href="#注册中心与配置中心" aria-hidden="true">#</a> 注册中心与配置中心</h3><h4 id="注册中心" tabindex="-1"><a class="header-anchor" href="#注册中心" aria-hidden="true">#</a> 注册中心：</h4><p>通讯录，让应用之间互相认识</p><p>健康检查：心跳功能，如多个应用节点同时提供服务，其中有个节点挂掉了 还不知道；也可以在控台手动操作上线/下线，如当端口18001和18002同时提供服务这时需要更新服务，此时可以下线某个节点，等发布好后的再在控台点击上线，依次更新处理。</p><p>路由转发：为了控制成本，会对机器做动态扩容，此时ip就不固定了，可以更好的和gateway配合</p><p>远程调用：如在使用feign调用服务之间的接口时，就可以在注解上只写name 不写固定的url</p><h4 id="配置中心" tabindex="-1"><a class="header-anchor" href="#配置中心" aria-hidden="true">#</a> 配置中心：</h4><p>动态修改线上的配置</p><p>开关、阈值、枚举项</p><h2 id="下载" tabindex="-1"><a class="header-anchor" href="#下载" aria-hidden="true">#</a> 下载</h2>',11),r={href:"https://github.com/alibaba/nacos/releases",target:"_blank",rel:"noopener noreferrer"},u=n(`<h2 id="版本说明" tabindex="-1"><a class="header-anchor" href="#版本说明" aria-hidden="true">#</a> 版本说明</h2><p>https://sca.aliyun.com/zh-cn/docs/2022.0.0.0/overview/version-explain</p><p>版本的选择基于springboot和springcloud的版本</p><h2 id="step-1" tabindex="-1"><a class="header-anchor" href="#step-1" aria-hidden="true">#</a> step 1</h2><p>首先得有java环境jdk8+、maven环境3.2+；</p><p>nacos解压到指定盘符，进入盘符，进入conf，修改配置文件application.properties，搜索nacos.core.auth.plugin.nacos.token.secret.key值，默认是空的，请设置</p><h3 id="启动服务" tabindex="-1"><a class="header-anchor" href="#启动服务" aria-hidden="true">#</a> 启动服务</h3><p>进入nacos/bin/目录，启用终端输入命令</p><h4 id="linux-unix-mac" tabindex="-1"><a class="header-anchor" href="#linux-unix-mac" aria-hidden="true">#</a> Linux/Unix/Mac</h4><p>启动命令(standalone代表着单机模式运行，非集群模式):</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> startup.sh <span class="token parameter variable">-m</span> standalone
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果使用的是ubuntu系统</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> startup.sh <span class="token parameter variable">-m</span> standalone
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> Windows</h4><p>启动命令(standalone代表着单机模式运行，非集群模式):</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>startup.cmd <span class="token parameter variable">-m</span> standalone
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="关闭服务" tabindex="-1"><a class="header-anchor" href="#关闭服务" aria-hidden="true">#</a> 关闭服务</h3><h4 id="linux-unix-mac-1" tabindex="-1"><a class="header-anchor" href="#linux-unix-mac-1" aria-hidden="true">#</a> Linux/Unix/Mac</h4><p><code>sh shutdown.sh</code></p><h4 id="windows-1" tabindex="-1"><a class="header-anchor" href="#windows-1" aria-hidden="true">#</a> Windows</h4><p><code>shutdown.cmd</code> 或者双击shutdown.cmd运行文件。</p><h2 id="step-2" tabindex="-1"><a class="header-anchor" href="#step-2" aria-hidden="true">#</a> step 2</h2><p>启动好nacos之后，打开浏览器登录控台页面，默认端口8848，账号密码默认nacos</p><p>打开项目，在父pom内引入依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2022.0.0.0-RC1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意版本以你的项目为准</p><p>找到具体使用nacos的模块引入依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-bootstrap<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在resources下新增配置文件 bootstrap.properties 并打开编辑</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 注册中心的名字  </span>
<span class="token key attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token value attr-value">batch  </span>
  
<span class="token comment">## 启动环境，nacos会根据环境读不同的配置dataId：batch-dev.properties  </span>
<span class="token key attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token value attr-value">dev  </span>
  
<span class="token comment">## nacos server地址  </span>
<span class="token key attr-name">spring.cloud.nacos.config.server-addr</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1:8848  </span>
<span class="token comment">## 配置中心文件后缀，默认properties  </span>
<span class="token key attr-name">spring.cloud.nacos.config.file-extension</span><span class="token punctuation">=</span><span class="token value attr-value">properties</span>
<span class="token comment">## Nacos配置的命名空间  </span>
<span class="token key attr-name">spring.cloud.nacos.config.namespace</span><span class="token punctuation">=</span><span class="token value attr-value">train  </span>
<span class="token comment">## nacos server注册中心地址  </span>
<span class="token key attr-name">spring.cloud.nacos.discovery.server-addr</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1:8848  </span>
<span class="token key attr-name">spring.cloud.nacos.discovery.namespace</span><span class="token punctuation">=</span><span class="token value attr-value">train</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-3" tabindex="-1"><a class="header-anchor" href="#step-3" aria-hidden="true">#</a> step 3</h2><p>启动好nacos服务后，进入8848登录控台，来到 命名空间 以项目隔离为目的创建各自的命名空间</p><p>然后来到 配置管理 这时可以看到 面包屑栏中 public 右侧多了一栏你新建的命名空间 点击创建配置</p><p>DataID以 spring.application.name 和 spring.profiles.active 、spring.cloud.nacos.config.file-extension为拼接，根据我上面的配置 结果为 batch-dev.properties</p><p>spring.cloud.nacos.discovery.namespace的值就是 命名空间中的id值</p><p>配置内容：想要动态修改的配置，如数据库配置</p><p>发布配置以后，在需要动态配置内容的类中添加@RefreshScope注解</p><h3 id="nacos-gateway路由转发" tabindex="-1"><a class="header-anchor" href="#nacos-gateway路由转发" aria-hidden="true">#</a> nacos+gateway路由转发</h3><p>在gateway的配置文件中，一般情况下路由的方式是ip+端口写死的方式，局限性较大，就像没有替补球员一样，配合nacos可以使用负载均衡+应用名的方式</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#spring.cloud.gateway.routes[0].uri=http://127.0.0.1:8001  </span>
<span class="token key attr-name">spring.cloud.gateway.routes[0].uri</span><span class="token punctuation">=</span><span class="token value attr-value">lb://member</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中应用名就是 spring.application.name 注册中心的名字，至于这个服务应用是什么ip和端口就不用关心了，nacos会将各个服务列表推到gateway里面来，gateway就可以通过应用名找到该应用的所有节点，然后选择其中的一台发送，默认是轮询交替</p><p>gateway不需要配置中心的配置，只需要注册中心的配置</p><p>如果出现报错503无法访问，看 pom 中是否引入了下面的依赖</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">&lt;dependency&gt;</span> <span class="token value attr-value"> </span>
<span class="token key attr-name">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span> <span class="token value attr-value"> </span>
<span class="token key attr-name">    &lt;artifactId&gt;spring-cloud-starter-loadbalancer&lt;/artifactId&gt;</span> <span class="token value attr-value"> </span>
&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要引入负载均衡的依赖</p><h2 id="nacos挂了会怎样" tabindex="-1"><a class="header-anchor" href="#nacos挂了会怎样" aria-hidden="true">#</a> nacos挂了会怎样</h2><p>不会影响正在运行的服务，每个服务之间都有 nacos 推送的”通讯录“，前提条件是，nacos不能在这些服务启动好之前挂掉，否则这些服务节点启动失败</p>`,47);function k(g,v){const s=t("ExternalLinkIcon");return p(),c("div",null,[d,a("p",null,[a("a",r,[i("Github"),o(s)])]),u])}const m=e(l,[["render",k],["__file","nacos.html.vue"]]);export{m as default};
