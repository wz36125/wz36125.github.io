import{_ as l,r as o,o as i,c as r,b as n,d as s,e as a,a as t}from"./app-c9408cad.js";const d={},c=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"介绍"),n("p",null,"NVM（Node Version Manager）是一个用于管理 Node.js 版本的工具，它允许你在同一台计算机上轻松地安装、切换和管理多个 Node.js 版本。"),n("p",null,"以下是一些关于 NVM 的要点："),n("ol",null,[n("li",null,[n("p",null,"多版本管理：NVM 允许你同时安装和管理多个 Node.js 版本。你可以在同一台计算机上拥有不同版本的 Node.js，并且可以轻松切换它们，以适应不同的项目和需求。")]),n("li",null,[n("p",null,"快速切换：通过 NVM，你可以在不同的终端会话中快速切换 Node.js 版本。这使你能够在不同的项目之间无缝切换，而无需手动更改全局的 Node.js 版本。")]),n("li",null,[n("p",null,"简单安装：NVM 提供了一个方便的安装脚本，使你可以快速安装 NVM 工具。安装过程简单，并且可以在不同的操作系统上使用，包括 macOS、Linux 和 Windows。")]),n("li",null,[n("p",null,"版本管理：通过 NVM，你可以安装特定版本的 Node.js，包括稳定版本、最新版本或特定的 LTS（长期支持）版本。你还可以安装和使用旧版本的 Node.js，以确保项目的兼容性和稳定性。")]),n("li",null,[n("p",null,"自定义设置：NVM 允许你自定义 Node.js 的全局和项目级别的默认版本。你可以选择在不同的项目中使用不同的 Node.js 版本，并为每个项目设置特定的默认版本。")]),n("li",null,[n("p",null,"插件扩展：NVM 具有插件系统，可以使用插件来扩展其功能。这些插件提供了额外的功能和工具，例如自动切换 Node.js 版本、版本别名、自动安装所需的全局包等。")])]),n("p",null,"通过使用 NVM，你可以更轻松地管理和切换不同版本的 Node.js，确保你的项目与所需的 Node.js 版本兼容，并提高开发和测试的灵活性。它是 Node.js 开发者常用的工具之一，可以提高开发效率和项目的可维护性。")],-1),p=n("div",{class:"custom-container warning"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8v4"}),n("path",{d:"M12 16h.01"})])]),n("p",{class:"custom-container-title"},"注意"),n("ol",null,[n("li",null,"安装之前，如果之前已经安装了Node.js 必须先卸载之前安装的Node.js"),n("li",null,"安装的路径中不能是 中文或者含有空格等特殊符号 的路径")])],-1),u=n("h2",{id:"下载、安装nvm",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下载、安装nvm","aria-hidden":"true"},"#"),s(" 下载、安装nvm")],-1),v=n("h3",{id:"linux版",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#linux版","aria-hidden":"true"},"#"),s(" Linux版")],-1),m={href:"https://github.com/nvm-sh/nvm/releases",target:"_blank",rel:"noopener noreferrer"},h=n("h3",{id:"windows版",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#windows版","aria-hidden":"true"},"#"),s(" Windows版")],-1),b={href:"https://github.com/coreybutler/nvm-windows/releases",target:"_blank",rel:"noopener noreferrer"},k=t(`<h4 id="检查是否成功安装" tabindex="-1"><a class="header-anchor" href="#检查是否成功安装" aria-hidden="true">#</a> 检查是否成功安装</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nvm <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果正确显示了版本号，则视为成功</p><h2 id="修改配置文件" tabindex="-1"><a class="header-anchor" href="#修改配置文件" aria-hidden="true">#</a> 修改配置文件</h2><p>找到安装的根目录的 <code>settings.txt</code> 文件，设置镜像</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">node_mirror</span><span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span class="token operator">/</span>mirrors<span class="token operator">/</span>node<span class="token operator">/</span>
<span class="token literal-property property">npm_mirror</span><span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span class="token operator">/</span>mirrors<span class="token operator">/</span>npm<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量" aria-hidden="true">#</a> 配置环境变量</h2><p>打开系统的高级系统设置 -&gt; 环境变量 NVM_HOME 即可</p><h2 id="安装node-js" tabindex="-1"><a class="header-anchor" href="#安装node-js" aria-hidden="true">#</a> 安装Node.js</h2><p>打开cmd，在命令行中输入以下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nvm <span class="token function">install</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
nvm <span class="token function">install</span> <span class="token number">18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>version指要安装的版本 如果不指定版本，可以使用以下命令来安装最新的稳定版本的 Node.js</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nvm <span class="token function">install</span> <span class="token parameter variable">--lts</span>
<span class="token comment"># or</span>
nvm <span class="token function">install</span> <span class="token function">node</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用-切换node-js的版本" tabindex="-1"><a class="header-anchor" href="#使用-切换node-js的版本" aria-hidden="true">#</a> 使用/切换Node.js的版本</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看已安装的版本</span>
nvm <span class="token function">ls</span>

nvm use <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的 <code>&lt;version&gt;</code> 也可以去nvm的根目录查看，不同的版本以不同版本号命名的文件夹</p><h2 id="卸载node-js" tabindex="-1"><a class="header-anchor" href="#卸载node-js" aria-hidden="true">#</a> 卸载Node.js</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 首先，使用以下命令查看已安装的 Node.js 版本和路径</span>
nvm list
<span class="token comment"># 确定想要卸载的特定版本，并使用以下命令卸载该版本</span>
nvm uninstall <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>

nvm uninstall <span class="token number">18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看远程 Node 所有版本</span>
nvm ls-remote 
<span class="token comment"># 查看远程 Node 所有 LTS 版本</span>
nvm ls-remote <span class="token parameter variable">--lts</span> 
<span class="token comment"># 查看本地 Node 版本</span>
nvm <span class="token function">ls</span> 
<span class="token comment"># 查看当前使用 Node 版本</span>
nvm current 
<span class="token comment"># 查看 node 安装位置</span>
nvm <span class="token function">which</span> <span class="token number">14</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function g(x,N){const e=o("ExternalLinkIcon");return i(),r("div",null,[c,p,u,v,n("p",null,[n("a",m,[s("Linux版本下载地址"),a(e)])]),h,n("p",null,[n("a",b,[s("Windows版本下载地址"),a(e)]),s(" 下载完成后，正常安装流程执行")]),k])}const j=l(d,[["render",g],["__file","nvmInstall.html.vue"]]);export{j as default};
