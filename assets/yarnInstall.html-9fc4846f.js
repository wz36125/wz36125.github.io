import{_ as a,o as e,c as s,a as n}from"./app-c9408cad.js";const i={},r=n(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><ul><li>Yarn 是一个现代化的 JavaScript 包管理工具，旨在提供更快、可靠和安全的包管理体验。它由 Facebook、Google、Exponent 和 Tilde 共同开发，与 npm 相互兼容，并提供了一些增强的功能和性能优化。</li><li>是一个强大且易于使用的工具，被广泛应用于 JavaScript 和 Node.js 项目的包管理和依赖管理中。它提供了更快、可靠和一致的包管理体验，使开发人员能够更高效地构建和管理项目。</li></ul><h2 id="_1-检查环境" tabindex="-1"><a class="header-anchor" href="#_1-检查环境" aria-hidden="true">#</a> 1.检查环境</h2><p>确保你的计算机上已经安装了 Node.js。Yarn 是基于 Node.js 的，所以首先需要确保 Node.js 已正确安装。你可以在命令行中输入以下命令来检查 Node.js 是否已安装并查看其版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果 Node.js 尚未安装，请前往 Node.js 官方网站（https://nodejs.org）下载并安装适合你操作系统的版本。</p><h2 id="_2-安装-yarn" tabindex="-1"><a class="header-anchor" href="#_2-安装-yarn" aria-hidden="true">#</a> 2.安装 Yarn</h2><p>一旦你确认了 Node.js 的安装，你可以通过以下方式来安装 Yarn：</p><p>在命令行中运行以下命令，使用 Node.js 的包管理器 npm 安装 Yarn：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">yarn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你更喜欢使用其他包管理器，比如 Homebrew（仅适用于 macOS）或 Chocolatey（仅适用于 Windows），可以按照它们的安装说明来安装 Yarn。</p><h2 id="_3-验证安装" tabindex="-1"><a class="header-anchor" href="#_3-验证安装" aria-hidden="true">#</a> 3.验证安装</h2><p>安装完成后，你可以在命令行中输入以下命令来验证 Yarn 是否成功安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果成功显示 Yarn 的版本号，说明安装成功。</p><h2 id="_4-开始使用-yarn" tabindex="-1"><a class="header-anchor" href="#_4-开始使用-yarn" aria-hidden="true">#</a> 4.开始使用 Yarn</h2><p>一旦 Yarn 安装完成，你可以在你的项目目录中运行 Yarn 命令。以下是几个常用的 Yarn 命令：</p><ul><li><p>初始化一个新项目：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>安装项目依赖：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>添加依赖项到项目：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> package-name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>删除项目中的依赖项：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> remove package-name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>运行项目的脚本命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> run script-name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>请根据你的具体需求使用适当的 Yarn 命令。你可以通过运行以下命令来获取更多关于 Yarn 命令的帮助和文档：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token builtin class-name">help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-设置镜像" tabindex="-1"><a class="header-anchor" href="#_5-设置镜像" aria-hidden="true">#</a> 5.设置镜像</h2><p>在 Yarn 中，你可以通过配置镜像来加快包的下载速度或更改默认的包源。以下是一些常用的 Yarn 镜像设置方法：</p><ul><li>设置全局镜像：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> registry <span class="token operator">&lt;</span>registry-url<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>其中 <code>&lt;registry-url&gt;</code> 是你想要使用的镜像地址，例如 &quot;https://registry.npm.taobao.org&quot; 是淘宝镜像。通过设置全局镜像，所有的项目都将使用该镜像进行包的下载。</p></li><li><p>设置项目级别镜像：</p></li><li><p>在你的项目根目录下，创建一个 <code>.yarnrc</code> 文件，并在其中添加以下内容：</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>registry <span class="token operator">&lt;</span>registry-url<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>同样，<code>&lt;registry-url&gt;</code> 是你想要使用的镜像地址。这将使得该项目中的 Yarn 命令使用指定的镜像。</p></li><li><p>临时使用镜像：</p></li></ul><p>如果你只想临时使用一个镜像，而不改变全局或项目级别的设置，可以在使用 Yarn 命令时添加 <code>--registry</code> 参数，如下所示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">install</span> <span class="token parameter variable">--registry</span> <span class="token operator">&lt;</span>registry-url<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>这将在特定的命令中临时使用指定的镜像地址。</p></li><li><p>常用的 Yarn 镜像源包括淘宝镜像（https://registry.npm.taobao.org）、npm 官方镜像（https://registry.npmjs.org）、cnpm 镜像（https://r.cnpmjs.org）等。</p></li></ul>`,30),l=[r];function d(t,c){return e(),s("div",null,l)}const o=a(i,[["render",d],["__file","yarnInstall.html.vue"]]);export{o as default};
