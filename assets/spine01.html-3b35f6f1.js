import{_ as p,r as e,o,c,b as n,d as a,e as l,a as s}from"./app-c9408cad.js";const i={},u=s('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>为什么选择使用spine骨骼动画？因为它是当前最好的选择。 需要提前了解的，spine骨骼动画是由三个部分文件组成</p><ol><li><strong>骨骼数据文件</strong> (.json、.skel)</li><li><strong>纹理图集文件</strong> (.atlas)</li><li><strong>图像文件</strong> (.png)</li></ol><p>以上文件缺一不可。 直接进入正题。</p><h2 id="下载、安装" tabindex="-1"><a class="header-anchor" href="#下载、安装" aria-hidden="true">#</a> 下载、安装</h2><p>全篇是以spine-runtime 3.6版本为讲解，更高的版本 使用方式会不同 注意甄别</p>',6),k={href:"https://github.com/EsotericSoftware/spine-runtimes/releases",target:"_blank",rel:"noopener noreferrer"},r=s("<li>进入解压后的文件夹，你会看到很多语言、游戏引擎平台的各个版本，由于我们是前端网页环境，所以我们选spine-ts,进入后会看到<code>canvas</code>、<code>threejs</code>、<code>webgl</code>、<code>widget</code> 这些是以什么样的环境去运行spine，这里我选择webgl(因为性能最好)，进入这个文件夹后 会发现很多官方示例建议去看看，会对接下来的操作有所理解。</li><li>选择webgl环境，须知以下条件 <ol><li>浏览器版本是否足够高，最好选择Chrome或Edge浏览器，IE请不要选择</li><li>手机环境的webview版本是否足够高？最好是&gt;=91</li></ol></li>",2),d=s(`<h2 id="编码" tabindex="-1"><a class="header-anchor" href="#编码" aria-hidden="true">#</a> 编码</h2><ul><li>当前路径<code>spine-runtimes-3.6.53\\spine-ts\\webgl\\example</code>，在这个目录下 新建一个xxx.html (随意取文件名)，使用IDE打开(我使用的是webstrom，你可以选择vscode)</li><li>在head内引入spine运行库文件，下面是全部的代码，演示的是官方的json动画</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>  
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>  
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>spine.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">  
      <span class="token selector">*</span> <span class="token punctuation">{</span>  
          <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  
          <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  
      <span class="token punctuation">}</span>  
  
      <span class="token selector">body,  
      html</span> <span class="token punctuation">{</span>  
          <span class="token property">height</span><span class="token punctuation">:</span> 100%  
      <span class="token punctuation">}</span>  
  
      <span class="token selector">canvas</span> <span class="token punctuation">{</span>  
          <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  
          <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  
          <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  
          <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span>  
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">  
  <span class="token keyword">var</span> canvas<span class="token punctuation">,</span> gl<span class="token punctuation">,</span> shader<span class="token punctuation">,</span> batcher<span class="token punctuation">,</span> skeletonRenderer<span class="token punctuation">,</span> assetManager<span class="token punctuation">;</span>  
  <span class="token keyword">var</span> filepath <span class="token operator">=</span> <span class="token string">&quot;assets/&quot;</span><span class="token punctuation">;</span>  
  <span class="token keyword">var</span> filename <span class="token operator">=</span> <span class="token string">&quot;spineboy&quot;</span><span class="token punctuation">;</span>  
  <span class="token keyword">var</span> sprite <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  
  <span class="token comment">// m = 模型(model) v = 视图(view) p = 投影(projection) 矩阵  </span>
  <span class="token keyword">var</span> mvp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>Matrix4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token comment">// 创建canvas元素,并设置其宽高与窗口相同,然后将canvas元素添加到body中  </span>
    canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>  
    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>  
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 创建WebGL上下文, 设置alpha属性为true,以允许透明度  </span>
    <span class="token keyword">var</span> config <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">alpha</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// 这里我选择使用webgl2</span>
    gl <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;webgl2&#39;</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 也可以选择这样  </span>
    <span class="token comment">// gl = canvas.getContext(&quot;webgl&quot;, config) || canvas.getContext(&quot;experimental-webgl&quot;, config);  </span>
  
    <span class="token comment">// 初始化Spine运行时  </span>
    <span class="token comment">// 着色器  </span>
    shader <span class="token operator">=</span> spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>Shader<span class="token punctuation">.</span><span class="token function">newTwoColoredTextured</span><span class="token punctuation">(</span>gl<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 多边形渲染器  </span>
    batcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>PolygonBatcher</span><span class="token punctuation">(</span>gl<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    mvp<span class="token punctuation">.</span><span class="token function">ortho2d</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 骨骼渲染器  </span>
    skeletonRenderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>SkeletonRenderer</span><span class="token punctuation">(</span>gl<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 资源管理器，第二个参数可以传 默认的资源路径  </span>
    assetManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>AssetManager</span><span class="token punctuation">(</span>gl<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 加载资源  </span>
    <span class="token comment">// 这里面的资源是官方自带的  </span>
    assetManager<span class="token punctuation">.</span><span class="token function">loadText</span><span class="token punctuation">(</span>filepath <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">&#39;-ess.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 如果是.skel 文件则调用loadBinary  </span>
    <span class="token comment">// assetManager.loadBinary(filepath + filename + &#39;.skel&#39;);  </span>
    <span class="token comment">// 这个方法会将.atlas文件内相关的图片文件一并加载到管理器中  </span>
    assetManager<span class="token punctuation">.</span><span class="token function">loadTextureAtlas</span><span class="token punctuation">(</span>filepath <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">&#39;.atlas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>load<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span>  
  
  
  <span class="token keyword">function</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token comment">// io的操作是异步的 需要全部资源加载完毕后 再加载骨骼  </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>assetManager<span class="token punctuation">.</span><span class="token function">isLoadingComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      sprite <span class="token operator">=</span> <span class="token function">loadSkeleton</span><span class="token punctuation">(</span>filename <span class="token operator">+</span> <span class="token string">&#39;-ess&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  
      <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>load<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  <span class="token punctuation">}</span>  
  
  <span class="token comment">// 加载骨架函数，name为文件名，initialAnimation为初始动画，premultipliedAlpha为预乘alpha，skin为皮肤  </span>
  <span class="token keyword">function</span> <span class="token function">loadSkeleton</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> initialAnimation<span class="token punctuation">,</span> premultipliedAlpha<span class="token punctuation">,</span> skin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token comment">// 如果skin未定义，则设置skin为默认皮肤  </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>skin <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> skin <span class="token operator">=</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">;</span>  
    <span class="token comment">// 通过assetManager获取骨骼图集  </span>
    <span class="token keyword">var</span> atlas <span class="token operator">=</span> assetManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filepath <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">&quot;.atlas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 创建AtlasAttachmentLoader，用于加载骨骼图集中的附件  </span>
    <span class="token keyword">var</span> atlasLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>AtlasAttachmentLoader</span><span class="token punctuation">(</span>atlas<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 使用AtlasAttachmentLoader创建SkeletonJson，用于解析骨骼数据  </span>
    <span class="token keyword">var</span> skeletonJson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>SkeletonJson</span><span class="token punctuation">(</span>atlasLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 如果是skel文件 使用 let skeletonBinary = new spine.SkeletonBinary(atlasLoader);</span>
    <span class="token comment">// 读取骨骼数据文件，获取骨骼数据  </span>
    <span class="token keyword">var</span> skeletonData <span class="token operator">=</span> skeletonJson<span class="token punctuation">.</span><span class="token function">readSkeletonData</span><span class="token punctuation">(</span>assetManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filepath <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 创建骨骼对象，使用骨骼数据  </span>
    <span class="token keyword">var</span> skeleton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>Skeleton</span><span class="token punctuation">(</span>skeletonData<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    skeleton<span class="token punctuation">.</span>opacity <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
    <span class="token comment">// 设置骨骼的皮肤  </span>
    skeleton<span class="token punctuation">.</span><span class="token function">setSkinByName</span><span class="token punctuation">(</span>skin<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 设置骨骼的姿势  </span>
    skeleton<span class="token punctuation">.</span><span class="token function">setToSetupPose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 更新骨骼的世界变换  </span>
    skeleton<span class="token punctuation">.</span><span class="token function">updateWorldTransform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 初始化骨骼的边界框  </span>
    skeleton<span class="token punctuation">.</span>bounds <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  
    skeleton<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span>skeleton<span class="token punctuation">.</span>bounds<span class="token punctuation">.</span>offset<span class="token punctuation">,</span> skeleton<span class="token punctuation">.</span>bounds<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 根据骨骼数据创建骨骼动画状态，并使用 initialAnimation 参数作为初始要播放的动画  </span>
    skeleton<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>AnimationState</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>AnimationStateData</span><span class="token punctuation">(</span>skeleton<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    skeleton<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">setAnimation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> initialAnimation<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">return</span> <span class="token punctuation">{</span>skeleton<span class="token punctuation">,</span> <span class="token literal-property property">state</span><span class="token operator">:</span> skeleton<span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token literal-property property">bounds</span><span class="token operator">:</span> skeleton<span class="token punctuation">.</span>bounds<span class="token punctuation">,</span> premultipliedAlpha<span class="token punctuation">}</span>  
  <span class="token punctuation">}</span>  
  
  <span class="token keyword">var</span> frameTime <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>  
  <span class="token keyword">var</span> isBind<span class="token punctuation">;</span>  
  
  <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">timestamp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">var</span> delta <span class="token operator">=</span> timestamp <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>frameTime <span class="token operator">==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">?</span> timestamp <span class="token operator">:</span> frameTime<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    frameTime <span class="token operator">=</span> timestamp<span class="token punctuation">;</span>  
  
    <span class="token comment">// 更新 MVP 矩阵以调整画布大小  </span>
    <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    gl<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">COLOR_BUFFER_BIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 根据增量时间更新动画状态  </span>
    <span class="token keyword">var</span> state <span class="token operator">=</span> sprite<span class="token punctuation">.</span>state<span class="token punctuation">;</span>  
    <span class="token keyword">var</span> skeleton <span class="token operator">=</span> sprite<span class="token punctuation">.</span>skeleton<span class="token punctuation">;</span>  
    <span class="token keyword">var</span> bounds <span class="token operator">=</span> sprite<span class="token punctuation">.</span>bounds<span class="token punctuation">;</span>  
  
    state<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>delta <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token function">state</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>skeleton<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    skeleton<span class="token punctuation">.</span><span class="token function">updateWorldTransform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isBind<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      <span class="token comment">// 绑定着色器并设置纹理和mvp矩阵。  </span>
      <span class="token comment">// 如果没有unbind() 则不需要重复bind</span>
      isBind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token function">shader</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      shader<span class="token punctuation">.</span><span class="token function">setUniformi</span><span class="token punctuation">(</span>spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>Shader<span class="token punctuation">.</span><span class="token constant">SAMPLER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    shader<span class="token punctuation">.</span><span class="token function">setUniform4x4f</span><span class="token punctuation">(</span>spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>Shader<span class="token punctuation">.</span><span class="token constant">MVP_MATRIX</span><span class="token punctuation">,</span> mvp<span class="token punctuation">.</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 启动 batcher 并告诉 SkeletonRenderer 渲染要播放骨骼。  </span>
    batcher<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>shader<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    skeletonRenderer<span class="token punctuation">.</span>premultipliedAlpha <span class="token operator">=</span> sprite<span class="token punctuation">.</span>premultipliedAlpha<span class="token punctuation">;</span>  
    skeletonRenderer<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>batcher<span class="token punctuation">,</span> skeleton<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    batcher<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// shader.unbind();  </span>
  
    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span>  
  
  <span class="token comment">// 在render中调用，保证屏幕变化时 骨骼也能正确显示  </span>
  <span class="token keyword">function</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">var</span> w <span class="token operator">=</span> canvas<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>  
    <span class="token keyword">var</span> h <span class="token operator">=</span> canvas<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>  
    <span class="token keyword">var</span> bounds <span class="token operator">=</span> sprite<span class="token punctuation">.</span>bounds<span class="token punctuation">;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width <span class="token operator">!=</span> w <span class="token operator">||</span> canvas<span class="token punctuation">.</span>height <span class="token operator">!=</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> w<span class="token punctuation">;</span>  
      canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> h<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token comment">// 让其骨骼始终居中，大小保持合适  </span>
    <span class="token keyword">var</span> centerX <span class="token operator">=</span> bounds<span class="token punctuation">.</span>offset<span class="token punctuation">.</span>x <span class="token operator">+</span> bounds<span class="token punctuation">.</span>size<span class="token punctuation">.</span>x <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>  
    <span class="token keyword">var</span> centerY <span class="token operator">=</span> bounds<span class="token punctuation">.</span>offset<span class="token punctuation">.</span>y <span class="token operator">+</span> bounds<span class="token punctuation">.</span>size<span class="token punctuation">.</span>y <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>  
    <span class="token keyword">var</span> scaleX <span class="token operator">=</span> bounds<span class="token punctuation">.</span>size<span class="token punctuation">.</span>x <span class="token operator">/</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">;</span>  
    <span class="token keyword">var</span> scaleY <span class="token operator">=</span> bounds<span class="token punctuation">.</span>size<span class="token punctuation">.</span>y <span class="token operator">/</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">;</span>  
    <span class="token keyword">var</span> scale <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>scaleX<span class="token punctuation">,</span> scaleY<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.2</span><span class="token punctuation">;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scale <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> scale <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
    <span class="token keyword">var</span> width <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width <span class="token operator">*</span> scale<span class="token punctuation">;</span>  
    <span class="token keyword">var</span> height <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height <span class="token operator">*</span> scale<span class="token punctuation">;</span>  
  
    mvp<span class="token punctuation">.</span><span class="token function">ortho2d</span><span class="token punctuation">(</span>centerX <span class="token operator">-</span> width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> centerY <span class="token operator">-</span> height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    gl<span class="token punctuation">.</span><span class="token function">viewport</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span>  
  
  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function v(m,b){const t=e("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",k,[a("releases目录"),l(t)]),a("，找到3.6.53 并下载解压")]),r]),d])}const h=p(i,[["render",v],["__file","spine01.html.vue"]]);export{h as default};
