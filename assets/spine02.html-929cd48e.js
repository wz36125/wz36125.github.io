import{_ as n,o as s,c as a,a as p}from"./app-c9408cad.js";const t={},e=p(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>在上节(其一)中简单介绍如何基础使用Spine骨骼动画，在这节中将展示更进一步的玩法。 在主线程中渲染大量的特效，如果此时运算量比较高导致的卡顿，会导致用户的体验不够好，接下来来优化播放骨骼的环境。 已知 JavaScript 是一种单线程的语言，但可以使用 web workers 弥补语言的不足，使用 Worker 来增加<code>多线程</code>的机制。 函数的环境解决了，现在来解决画布的环境，使用Canvas api 中的 OffscreenCanvas ，它提供了一个可以脱离屏幕渲染的 canvas 对象，它与 Worker 的搭配是很不错的。</p><blockquote><ol><li>以上提到的API 都需要浏览器是否支持，建议使用 Chrome 或 Edge 浏览器</li><li>以上 API 的基本用法，需要有所了解</li><li>离屏渲染是一种优化图形渲染性能的技术，它允许在主线程之外的线程中进行图形渲染，从而不会阻塞用户的交互操作。然而，由于离屏渲染发生在主线程之外，因此它无法直接处理用户的交互事件，如点击或滑动等</li></ol></blockquote><h2 id="实操" tabindex="-1"><a class="header-anchor" href="#实操" aria-hidden="true">#</a> 实操</h2><ul><li>新建一个html文件，我取名为<code>离屏</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>  
<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;zh&quot;</span><span class="token operator">&gt;</span>  
<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>  
  <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>  
  <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Title<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>  
  <span class="token operator">&lt;</span>style<span class="token operator">&gt;</span>  
      <span class="token operator">*</span> <span class="token punctuation">{</span>  
          <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  
          <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span>  
  
      body<span class="token punctuation">,</span>  
      html <span class="token punctuation">{</span>  
          <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span>  
      <span class="token punctuation">}</span>  
  
      canvas <span class="token punctuation">{</span>  
          <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span>  
          <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  
          <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  
          <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span>  
  <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span>  
<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>  
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>  
  
<span class="token operator">&lt;</span>center<span class="token operator">&gt;</span>  
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;btns&quot;</span><span class="token operator">&gt;</span>  
    <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>动画名称<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>  
    <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">&quot;animationList&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>  
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>  
<span class="token operator">&lt;</span><span class="token operator">/</span>center<span class="token operator">&gt;</span>  
  
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>  
  <span class="token comment">// 创建 worker 线程</span>
  <span class="token keyword">let</span> worker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">&#39;worker.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token keyword">let</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  canvas<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&#39;spine-animation&#39;</span><span class="token punctuation">;</span>  
  canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>  
  canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>  
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token keyword">let</span> animationlist <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;animationList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// HTMLCanvasElement.transferControlToOffscreen()\`将控制转移到一个在主线程或者 web worker 的对象上, 会返回一个 OffscreenCanvas 对象。</span>
  <span class="token keyword">let</span> canvas2 <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">transferControlToOffscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token string">&quot;sgs/zh/&quot;</span><span class="token punctuation">;</span>
  <span class="token comment">// 接收信息</span>
  worker<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">let</span> data <span class="token operator">=</span> ev<span class="token punctuation">.</span>data<span class="token punctuation">;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>message <span class="token operator">==</span> <span class="token string">&#39;DATA&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      <span class="token keyword">let</span> animations <span class="token operator">=</span> data<span class="token punctuation">.</span>animations<span class="token punctuation">;</span>  
      <span class="token keyword">let</span> frag <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createDocumentFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> animations<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">let</span> option <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;option&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        option<span class="token punctuation">.</span>value <span class="token operator">=</span> animations<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  
        option<span class="token punctuation">.</span>text <span class="token operator">=</span> animations<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span>option<span class="token punctuation">.</span>text <span class="token operator">==</span> data<span class="token punctuation">.</span>now<span class="token punctuation">)</span> option<span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  
        frag<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span>  
      animationlist<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>frag<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      animationlist<span class="token punctuation">.</span>onchange <span class="token operator">=</span> changeAnimation<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  <span class="token punctuation">}</span>  
  <span class="token comment">// 发送信息</span>
  worker<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;INIT&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">canvas</span><span class="token operator">:</span> canvas2<span class="token punctuation">,</span> path<span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;XingXiang&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>canvas2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;resize&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    worker<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;UPDATE&#39;</span><span class="token punctuation">,</span>  
      <span class="token literal-property property">width</span><span class="token operator">:</span> canvas<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>  
      <span class="token literal-property property">height</span><span class="token operator">:</span> canvas<span class="token punctuation">.</span>clientHeight  
    <span class="token punctuation">}</span><span class="token punctuation">)</span>  
  <span class="token punctuation">}</span><span class="token punctuation">)</span>  
  
  <span class="token keyword">function</span> <span class="token function">changeAnimation</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    worker<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;CHANGE&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">animation</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token punctuation">)</span>  
  <span class="token punctuation">}</span>  
  
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>  
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>  
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code> 这次演示的骨骼动画是一个二进制的文件，二进制对人类不可读，json对人类可读，生成二进制的文件是对性能的进一步需求
</code></pre><ul><li>新建一个js文件，我取名为 <code>worker</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引入 spine 运行库，也可以加载其它的封装库</span>
<span class="token function">importScripts</span><span class="token punctuation">(</span><span class="token string">&#39;spine.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
<span class="token keyword">var</span> window <span class="token operator">=</span> self<span class="token punctuation">;</span>  
<span class="token keyword">var</span> devicePixelRatio <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token keyword">var</span> documentZoom <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token keyword">var</span> <span class="token function-variable function">HTMLCanvasElement</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  <span class="token keyword">return</span> <span class="token string">&#39;HTMLCanvasElement&#39;</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span><span class="token punctuation">;</span>  
<span class="token keyword">var</span> <span class="token function-variable function">HTMLElement</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  <span class="token keyword">return</span> <span class="token string">&#39;HTMLElement&#39;</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span><span class="token punctuation">;</span>  
  
<span class="token keyword">var</span> canvas<span class="token punctuation">,</span> gl<span class="token punctuation">,</span> shader<span class="token punctuation">,</span> batcher<span class="token punctuation">,</span> skeletonRenderer<span class="token punctuation">,</span> assetManager<span class="token punctuation">,</span> sprite<span class="token punctuation">;</span>  
<span class="token keyword">var</span> mvp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>Matrix4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">var</span> filename<span class="token punctuation">,</span>filepath<span class="token punctuation">;</span>  
  
<span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  gl <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;webgl2&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">alpha</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// 初始化Spine运行时  </span>
  <span class="token comment">// 着色器  </span>
  shader <span class="token operator">=</span> spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>Shader<span class="token punctuation">.</span><span class="token function">newTwoColoredTextured</span><span class="token punctuation">(</span>gl<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// 多边形渲染器  </span>
  batcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>PolygonBatcher</span><span class="token punctuation">(</span>gl<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  mvp<span class="token punctuation">.</span><span class="token function">ortho2d</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// 骨骼渲染器  </span>
  skeletonRenderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>SkeletonRenderer</span><span class="token punctuation">(</span>gl<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  <span class="token comment">// 资源管理器，第二个参数可以传路径 默认的资源路径  </span>
  assetManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>AssetManager</span><span class="token punctuation">(</span>gl<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  <span class="token comment">// 加载资源  </span>
  assetManager<span class="token punctuation">.</span><span class="token function">loadBinary</span><span class="token punctuation">(</span>filepath <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">&#39;.skel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// 这个方法会将.atlas文件内相关的图片文件一并加载到管理器中  </span>
  <span class="token comment">// assetManager.loadTextureAtlas(filepath + filename + &#39;.atlas&#39;);  </span>
  assetManager<span class="token punctuation">.</span><span class="token function">loadText</span><span class="token punctuation">(</span>filepath <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">&#39;.atlas&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">var</span> imageName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  
    <span class="token keyword">var</span> atlasReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>TextureAtlasReader</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      <span class="token keyword">var</span> line <span class="token operator">=</span> atlasReader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token keyword">if</span> <span class="token punctuation">(</span>line <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>  
      line <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
      <span class="token keyword">if</span> <span class="token punctuation">(</span>line<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        imageName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>imageName<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        imageName <span class="token operator">=</span> line<span class="token punctuation">;</span>  
        assetManager<span class="token punctuation">.</span><span class="token function">loadTexture</span><span class="token punctuation">(</span>filepath <span class="token operator">+</span> imageName<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  
        <span class="token keyword">continue</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>  
  <span class="token punctuation">}</span><span class="token punctuation">)</span>  
  
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>load<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>  
  
<span class="token keyword">function</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  <span class="token keyword">if</span> <span class="token punctuation">(</span>assetManager<span class="token punctuation">.</span><span class="token function">isLoadingComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    sprite <span class="token operator">=</span> <span class="token function">loadSkeleton</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&quot;DaiJi&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span>  
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  
    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>load<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>  
  
<span class="token keyword">function</span> <span class="token function">loadSkeleton</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> initialAnimation<span class="token punctuation">,</span> premultipliedAlpha<span class="token punctuation">,</span> skin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  <span class="token comment">// 如果skin未定义，则设置skin为默认皮肤  </span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>skin <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> skin <span class="token operator">=</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">;</span>  
  <span class="token comment">// 通过assetManager获取骨骼图集  </span>
  <span class="token keyword">var</span> atlas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>TextureAtlas</span><span class="token punctuation">(</span>assetManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filepath <span class="token operator">+</span> filename <span class="token operator">+</span> <span class="token string">&#39;.atlas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
    <span class="token keyword">return</span> assetManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filepath <span class="token operator">+</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// console.log(atlas);  </span>
  <span class="token comment">// 创建AtlasAttachmentLoader，用于加载骨骼图集中的附件  </span>
  <span class="token keyword">var</span> atlasLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>AtlasAttachmentLoader</span><span class="token punctuation">(</span>atlas<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// 使用AtlasAttachmentLoader创建SkeletonJson，用于解析骨骼数据  </span>
  <span class="token comment">// var skeletonJson = new spine.SkeletonJson(atlasLoader);  </span>
  <span class="token keyword">var</span> skeletonBinary <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>SkeletonBinary</span><span class="token punctuation">(</span>atlasLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// 读取骨骼数据文件，获取骨骼数据  </span>
  <span class="token keyword">var</span> skeletonData <span class="token operator">=</span> skeletonBinary<span class="token punctuation">.</span><span class="token function">readSkeletonData</span><span class="token punctuation">(</span>assetManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filepath <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;.skel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// 创建骨骼对象，使用骨骼数据  </span>
  <span class="token keyword">var</span> skeleton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>Skeleton</span><span class="token punctuation">(</span>skeletonData<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  skeleton<span class="token punctuation">.</span>opacity <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
  <span class="token comment">// 设置骨骼的皮肤  </span>
  skeleton<span class="token punctuation">.</span><span class="token function">setSkinByName</span><span class="token punctuation">(</span>skin<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// 设置骨骼的姿势  </span>
  skeleton<span class="token punctuation">.</span><span class="token function">setToSetupPose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// 更新骨骼的世界变换  </span>
  skeleton<span class="token punctuation">.</span><span class="token function">updateWorldTransform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token comment">// 初始化骨骼的边界框  </span>
  skeleton<span class="token punctuation">.</span>bounds <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  
  skeleton<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span>skeleton<span class="token punctuation">.</span>bounds<span class="token punctuation">.</span>offset<span class="token punctuation">,</span> skeleton<span class="token punctuation">.</span>bounds<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  <span class="token comment">// 根据骨骼数据创建骨骼动画状态，并使用 initialAnimation 参数作为初始要播放的动画  </span>
  skeleton<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>AnimationState</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">spine<span class="token punctuation">.</span>AnimationStateData</span><span class="token punctuation">(</span>skeleton<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  skeleton<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">setAnimation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> initialAnimation<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>skeleton<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token keyword">var</span> actions <span class="token operator">=</span> skeleton<span class="token punctuation">.</span>data<span class="token punctuation">.</span>animations<span class="token punctuation">;</span>  
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>actions<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> actions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> actions<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>  
  window<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;DATA&quot;</span><span class="token punctuation">,</span>  
    <span class="token literal-property property">now</span><span class="token operator">:</span> initialAnimation<span class="token punctuation">,</span>  
    <span class="token literal-property property">animations</span><span class="token operator">:</span> result  
  <span class="token punctuation">}</span><span class="token punctuation">)</span>  
  <span class="token keyword">return</span> <span class="token punctuation">{</span>skeleton<span class="token punctuation">,</span> <span class="token literal-property property">state</span><span class="token operator">:</span> skeleton<span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token literal-property property">bounds</span><span class="token operator">:</span> skeleton<span class="token punctuation">.</span>bounds<span class="token punctuation">,</span> premultipliedAlpha<span class="token punctuation">}</span>  
<span class="token punctuation">}</span>  
  
<span class="token keyword">var</span> frameTime <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>  
<span class="token keyword">var</span> isBind<span class="token punctuation">;</span>  
  
<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">timestamp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  <span class="token keyword">var</span> delta <span class="token operator">=</span> timestamp <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>frameTime <span class="token operator">==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">?</span> timestamp <span class="token operator">:</span> frameTime<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  frameTime <span class="token operator">=</span> timestamp<span class="token punctuation">;</span>  
  
  <span class="token comment">// 更新 MVP 矩阵以调整画布大小  </span>
  <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  gl<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">COLOR_BUFFER_BIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  <span class="token comment">// 根据增量时间更新动画状态  </span>
  <span class="token keyword">var</span> state <span class="token operator">=</span> sprite<span class="token punctuation">.</span>state<span class="token punctuation">;</span>  
  <span class="token keyword">var</span> skeleton <span class="token operator">=</span> sprite<span class="token punctuation">.</span>skeleton<span class="token punctuation">;</span>  
  <span class="token keyword">var</span> bounds <span class="token operator">=</span> sprite<span class="token punctuation">.</span>bounds<span class="token punctuation">;</span>  
  
  state<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>delta <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token function">state</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>skeleton<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  skeleton<span class="token punctuation">.</span><span class="token function">updateWorldTransform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isBind<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token comment">// 绑定着色器并设置纹理和mvp矩阵。  </span>
    <span class="token comment">// 如果没有unbind() 则不需要重复bind  </span>
    <span class="token function">shader</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    shader<span class="token punctuation">.</span><span class="token function">setUniformi</span><span class="token punctuation">(</span>spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>Shader<span class="token punctuation">.</span><span class="token constant">SAMPLER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span>  
  
  shader<span class="token punctuation">.</span><span class="token function">setUniform4x4f</span><span class="token punctuation">(</span>spine<span class="token punctuation">.</span>webgl<span class="token punctuation">.</span>Shader<span class="token punctuation">.</span><span class="token constant">MVP_MATRIX</span><span class="token punctuation">,</span> mvp<span class="token punctuation">.</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  <span class="token comment">// 启动 batcher 并告诉 SkeletonRenderer 渲染要播放骨骼。  </span>
  batcher<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>shader<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  skeletonRenderer<span class="token punctuation">.</span>premultipliedAlpha <span class="token operator">=</span> sprite<span class="token punctuation">.</span>premultipliedAlpha<span class="token punctuation">;</span>  
  skeletonRenderer<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>batcher<span class="token punctuation">,</span> skeleton<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  batcher<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
  <span class="token comment">// shader.unbind();  </span>
  
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>  
  
<span class="token comment">// 在render中调用，保证屏幕变化时 骨骼也能正确显示  </span>
<span class="token keyword">function</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  <span class="token keyword">var</span> bounds <span class="token operator">=</span> sprite<span class="token punctuation">.</span>bounds<span class="token punctuation">;</span>  
  
  <span class="token comment">// 让其骨骼始终居中，大小保持合适  </span>
  <span class="token keyword">var</span> centerX <span class="token operator">=</span> bounds<span class="token punctuation">.</span>offset<span class="token punctuation">.</span>x <span class="token operator">+</span> bounds<span class="token punctuation">.</span>size<span class="token punctuation">.</span>x <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>  
  <span class="token keyword">var</span> centerY <span class="token operator">=</span> bounds<span class="token punctuation">.</span>offset<span class="token punctuation">.</span>y <span class="token operator">+</span> bounds<span class="token punctuation">.</span>size<span class="token punctuation">.</span>y <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>  
  <span class="token keyword">var</span> scaleX <span class="token operator">=</span> bounds<span class="token punctuation">.</span>size<span class="token punctuation">.</span>x <span class="token operator">/</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">;</span>  
  <span class="token keyword">var</span> scaleY <span class="token operator">=</span> bounds<span class="token punctuation">.</span>size<span class="token punctuation">.</span>y <span class="token operator">/</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">;</span>  
  <span class="token keyword">var</span> scale <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>scaleX<span class="token punctuation">,</span> scaleY<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.2</span><span class="token punctuation">;</span>  
  <span class="token keyword">if</span> <span class="token punctuation">(</span>scale <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> scale <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
  <span class="token keyword">var</span> width <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width <span class="token operator">*</span> scale<span class="token punctuation">;</span>  
  <span class="token keyword">var</span> height <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height <span class="token operator">*</span> scale<span class="token punctuation">;</span>  
  
  mvp<span class="token punctuation">.</span><span class="token function">ortho2d</span><span class="token punctuation">(</span>centerX <span class="token operator">-</span> width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> centerY <span class="token operator">-</span> height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  gl<span class="token punctuation">.</span><span class="token function">viewport</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>  
  
<span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  <span class="token keyword">var</span> data <span class="token operator">=</span> e<span class="token punctuation">.</span>data<span class="token punctuation">;</span>  
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">case</span> <span class="token string">&#39;INIT&#39;</span><span class="token operator">:</span>  
      canvas <span class="token operator">=</span> data<span class="token punctuation">.</span>canvas<span class="token punctuation">;</span>  
      <span class="token comment">// console.log(canvas);  </span>
      filepath <span class="token operator">=</span> data<span class="token punctuation">.</span>path<span class="token punctuation">;</span>  
      filename <span class="token operator">=</span> data<span class="token punctuation">.</span>name<span class="token punctuation">;</span>  
      <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>init<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token keyword">break</span><span class="token punctuation">;</span>  
    <span class="token keyword">case</span> <span class="token string">&#39;UPDATE&#39;</span><span class="token operator">:</span>  
      <span class="token function">update</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token keyword">break</span><span class="token punctuation">;</span>  
    <span class="token keyword">case</span> <span class="token string">&#39;CHANGE&#39;</span><span class="token operator">:</span>  
      sprite<span class="token punctuation">.</span>skeleton<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">setAnimation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>animation<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>  
      <span class="token keyword">break</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>  
  
<span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> obj<span class="token punctuation">.</span>width<span class="token punctuation">;</span>  
  canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> obj<span class="token punctuation">.</span>height<span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>把上节的代码复制过来，加以改造即可使用 本案例比较单一，还有更多的优化空间，比如封装成一个管理对象 播放更多的骨骼特效，对骨骼对象更好的操作、管理 等等</p></blockquote>`,10),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","spine02.html.vue"]]);export{k as default};
